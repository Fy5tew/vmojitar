from vkbottle.bot import Message

import config
from state_manager import state_manager

from .base import bot
from . import filters, logic


__all__ = []


VMOJI_STICKERS_LINK = 'vk.com/stickers/vmoji'
VMOJI_STICKERS_FULL_LINK = f'https://{VMOJI_STICKERS_LINK}'
VMOJI_STICKERS_TEXT = f"üîó –í–∞—à –Ω–∞–±–æ—Ä —Å—Ç–∏–∫–µ—Ä–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–¥–µ—Å—å: {VMOJI_STICKERS_FULL_LINK}"


@bot.on.message(filters.CommandRule(['–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', 'start']))
async def start_cmd(event: Message):
    user_info = await bot.api.users.get(user_ids=[event.from_id])
    name = user_info[0].first_name
    return (
        f"üëãüèª –ü—Ä–∏–≤–µ—Ç, {name}!\n"
        f"–Ø —Å–æ–∑–¥–∞—é –∞–≤–∞—Ç–∞—Ä–∫–∏ —Å–æ —Å—Ç–∏–∫–µ—Ä–∞–º–∏ –∏–∑ –≤–∞—à–µ–≥–æ –Ω–∞–±–æ—Ä–∞ Vmoji. "
        "–û—Ç–ø—Ä–∞–≤—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Å—Ç–∏–∫–µ—Ä –∏ —Å–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.\n"
        f"{VMOJI_STICKERS_TEXT}"
            )


@bot.on.message(filters.CommandRule(['–ø–æ–º–æ—â—å', '–ø–æ–º–æ–≥–∏', 'help']))
async def help_cmd(event: Message):
    await state_manager.delete_state(event.from_id)
    return (
        f"‚ùì –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –∞–≤–∞—Ç–∞—Ä–∫–∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π Vmoji, "
        "–≤—ã–±–µ—Ä–∏ —É–∑–æ—Ä –∏ —Ü–≤–µ—Ç —Ñ–æ–Ω–∞, "
        "–∞ –ø–æ—Å–ª–µ –¥–∞–π –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n"
        f"{VMOJI_STICKERS_TEXT}"
    )


@bot.on.message(filters.AttachmentTypeRule('sticker'), ~filters.StickerProductIdRule(config.STICKER_PRODUCT_IDS))
async def on_other_sticker(event: Message):
    await state_manager.delete_state(event.from_id)
    return (
        "ü§™ –≠—Ç–æ –Ω–µ Vmoji!\n"
        f"{VMOJI_STICKERS_TEXT}"
    )


@bot.on.message(filters.AttachmentTypeRule('sticker'), filters.StickerProductIdRule(config.STICKER_PRODUCT_IDS))
async def on_allowed_sticker(event: Message):
    sticker = await logic.get_sticker(event)
    content = await logic.get_content(sticker.url)
    await state_manager.set_sticker(
        user_id=event.from_id,
        content=content,
        width=sticker.width,
        height=sticker.height
    )
    await logic.choose_pattern(event)


@bot.on.message(filters.PayloadRule('pattern'))
async def on_pattern_choose(event: Message):
    await state_manager.set_pattern(event.from_id, event.payload['pattern'])
    await logic.choose_color(event)


@bot.on.message(filters.PayloadRule('color'))
async def on_color_choose(event: Message):
    await state_manager.set_color(event.from_id, event.payload['color'])
    await logic.generate_image(event)


@bot.on.message()
async def on_message(event: Message):
    await state_manager.delete_state(event.from_id)
    return (
        "üòû –ò–∑–≤–∏–Ω–∏, –Ω–æ —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é... "
        "–ù–∞–ø–∏—à–∏ '–ø–æ–º–æ—â—å', —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ —è —É–º–µ—é!"
    )
